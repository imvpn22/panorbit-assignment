{"version":3,"sources":["actions/index.js","actionTypes.js","components/Home.js","components/MapComponent.js","components/PageHeader.js","components/Sidebar.js","components/Profile.js","App.js","serviceWorker.js","enhancers/monitorReducers.js","middleware/logger.js","reducers/users.js","reducers/index.js","index.js","configureStore.js"],"names":["getUserList","dispatch","a","Axios","get","res","getUserListSuccess","data","users","type","getUserData","userId","Home","state","this","props","actions","then","console","log","setState","className","map","user","idx","key","href","id","style","backgroundImage","profilepicture","name","Component","connect","bindActionCreators","mapStyles","width","height","borderRadius","margin","containerStyle","position","MapContainer","google","zoom","initialCenter","lat","lng","GoogleApiWrapper","apiKey","PageHeader","Sidebar","menuItems","active","item","Profile","userData","params","match","parseInt","find","display","username","email","phone","website","company","catchPhrase","bs","address","street","suite","city","zipcode","MapComponent","App","path","component","Boolean","window","location","hostname","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","logger","store","next","group","info","result","getState","groupEnd","activeUser","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","rootReducer","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebf10c14.chunk.js","sourcesContent":["import Axios from 'axios';\nimport { GET_USER_LIST_SUCCESS, GET_USER_DATA } from '../actionTypes';\n\nexport const getUserList = () => {\n  return async dispatch => {\n    const res = await Axios.get('https://panorbit.in/api/users.json');\n    dispatch(getUserListSuccess(res.data.users));\n    // .catch(err => console.log(err));\n  };\n};\n\nexport const getUserListSuccess = res => ({\n  type: GET_USER_LIST_SUCCESS,\n  res\n});\n\nexport const getUserData = userId => ({\n  type: GET_USER_DATA,\n  userId\n});\n","export const GET_USER_LIST_SUCCESS = 'GET_USER_LIST_SUCCESS';\nexport const GET_USER_DATA = 'GET_USER_DATA';\n","// import Axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nclass Home extends Component {\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    // APi call to load profiles\n    this.props.actions.getUserList().then(() => {\n      console.log(this.props.users);\n      this.setState({ users: this.props.users });\n    });\n\n    // Axios.get('https://panorbit.in/api/users.json').then(res => {\n    //   const { users } = res.data;\n    //   this.setState({ users });\n    // });\n  }\n\n  render() {\n    return (\n      <div className=\"page-cont\">\n        <div className=\"user-list-cont\">\n          <div className=\"list-header\">Select an account</div>\n          <div className=\"list-body\">\n            {this.state.users.map((user, idx) => (\n              <a className=\"list-item\" key={idx} href={'profile/' + user.id}>\n                <div\n                  className=\"item-img\"\n                  style={{\n                    backgroundImage: 'url(' + user.profilepicture + ')'\n                  }}\n                ></div>\n                <div>{user.name}</div>\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '650px',\n  height: '400px',\n  borderRadius: '1rem',\n  margin: '1rem'\n};\n\nconst containerStyle = {\n  position: 'relative',\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        containerStyle={containerStyle}\n        initialCenter={{\n          lat: -1.2884,\n          lng: 36.8233\n        }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'YOUR_GOOGLE_MAPS_API_KEY_GOES_HERE'\n})(MapContainer);\n","import React, { Component } from 'react';\n\nexport default class PageHeader extends Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"page-header-cont\">\n        <div>Page Name</div>\n        <div>Profile</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Sidebar extends Component {\n  state = {\n    menuItems: [\n      { id: 0, name: 'Profile', active: true },\n      { id: 1, name: 'Posts' },\n      { id: 2, name: 'Gallery' },\n      { id: 3, name: 'ToDo' }\n    ]\n  };\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"sidebar-cont\">\n        {this.state.menuItems.map(item => (\n          <div\n            className={'sidebar-item ' + (item.active ? 'active' : '')}\n            key={item.id}\n          >\n            <span className=\"item-title\">{item.name}</span>\n            {item.active ? <span className=\"active-icon\"> * </span> : ''}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import Axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport MapComponent from './MapComponent';\nimport PageHeader from './PageHeader';\nimport Sidebar from './Sidebar';\n\nclass Profile extends Component {\n  state = {\n    userData: {}\n  };\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    const userId = parseInt(params.userId, 10);\n\n    // this.props.actions.getUserList().then(() => {\n    //   const userData = this.props.users.find(user => user.id === userId);\n    //   this.setState({ users: this.props.users, userData });\n    // });\n\n    Axios.get('https://panorbit.in/api/users.json').then(res => {\n      const { users } = res.data;\n      const userData = users.find(user => user.id === userId);\n      this.setState({ users, userData });\n    });\n  }\n\n  render() {\n    const { userData } = this.state;\n    return (\n      <div className=\"profile-cont\">\n        <Sidebar />\n        <div className=\"main-cont\">\n          <PageHeader />\n          <div style={{ display: 'flex' }}>\n            <div className=\"profile-det-cont\">\n              <div\n                className=\"profile-image\"\n                style={{\n                  backgroundImage: 'url(' + userData.profilepicture + ')'\n                }}\n              ></div>\n              <div>\n                <strong>{userData.name}</strong>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">Username : </div>\n                <div className=\"value\"> {userData.username}</div>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">E-mail : </div>\n                <div className=\"value\"> {userData.email}</div>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">Phone : </div>\n                <div className=\"value\"> {userData.phone}</div>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">Website : </div>\n                <div className=\"value\"> {userData.website}</div>\n              </div>\n\n              <div className=\"det-item border-top\">\n                <div className=\"label\">Company </div>\n              </div>\n\n              <div className=\"det-item\">\n                <div className=\"label\">Name : </div>\n                <div className=\"value\">\n                  {userData.company && userData.company.name}\n                </div>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">catchPhrase : </div>\n                <div className=\"value\">\n                  {userData.company && userData.company.catchPhrase}\n                </div>\n              </div>\n              <div className=\"det-item\">\n                <div className=\"label\">bs : </div>\n                <div className=\"value\">\n                  {userData.company && userData.company.bs}\n                </div>\n              </div>\n            </div>\n            <div className=\"profile-map-cont \">\n              <div className=\"profile-det-cont\">\n                <div className=\"det-item \">\n                  <div className=\"label\">Address </div>\n                  <div className=\"value\"></div>\n                </div>\n                <div className=\"det-item\">\n                  <div className=\"label\">Street : </div>\n                  <div className=\"value\">\n                    {userData.address && userData.address.street}\n                  </div>\n                </div>\n                <div className=\"det-item\">\n                  <div className=\"label\">Suite : </div>\n                  <div className=\"value\">\n                    {userData.address && userData.address.suite}\n                  </div>\n                </div>\n                <div className=\"det-item\">\n                  <div className=\"label\">City : </div>\n                  <div className=\"value\">\n                    {userData.address && userData.address.city}\n                  </div>\n                </div>\n                <div className=\"det-item\">\n                  <div className=\"label\">Zipcode : </div>\n                  <div className=\"value\">\n                    {userData.address && userData.address.zipcode}\n                  </div>\n                </div>\n              </div>\n\n              <MapComponent />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from 'react';\nimport './App.scss';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/profile/:userId\" component={Profile} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const round = number => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    console.log('reducer process time:', diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { GET_USER_DATA, GET_USER_LIST_SUCCESS } from '../actionTypes';\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case GET_USER_LIST_SUCCESS:\n      return { ...state, users: action.res };\n    case GET_USER_DATA:\n      return {\n        ...state,\n        activeUser: state.users.find(user => user.id === action.userId)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","import { combineReducers } from 'redux';\nimport users from './users';\n\nexport default combineReducers({\n  users\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers';\nimport loggerMiddleware from './middleware/logger';\nimport rootReducer from './reducers';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}